import UI/MindstoneButton
import Fishing
//import CozyCave

?loc.begin | loc.loop
  loadout 1

// --==[ Cooldown Functions ]==-- \\
var foeCount
var buffCount
var meleeDist = 8
var longDist = 19
var handed

func WeaponCooldowns(foeCount, buffCount)
  Skeleton(buffCount)
  Bardiche()
  Hammer(foeCount)
  Mask()
  Blade(foeCount)
  Fissure(foeCount)

func MeleeCooldowns(foeCount, buffCount)
  Skeleton(buffCount)
  Bardiche()
  Hammer(foeCount)

func RangeCooldowns(foeCount)
  Mask()
  Blade(foeCount)
  Fissure(foeCount)

func AreaCooldowns(foeCount)
  Mask()
  Blade(foeCount)
  Hammer(foeCount)
  Fissure(foeCount)

func SingleCooldowns(buffCount)
  Skeleton(buffCount)
  Bardiche()
  Mask()

// ------------------------ \\

func Bardiche()
  ?(item.GetCooldown(＂bardiche＂) < 1 |
  ^item.GetCooldown(＂bardiche＂) > 870) &
  ^foe.count >= 1 & foe.distance < meleeDist
    equip bardiche
    activate R
    break

func Hammer(foeCount)
  ?(item.GetCooldown(＂heavy_hammer＂) < 1 | 
  ^item.GetCooldown(＂heavy_hammer＂) > 630) &
  ^foe.count >= foeCount &
  ^foe.distance < meleeDist
    equip heavy hammer
    activate R
    break

func Mask()
  ?item.GetCooldown(＂mask＂) < 1 &
  ^foe.count > 0 & foe.distance < longDist &
  ^foe ! nagaraja
    equipR mask
    activate R
    break

func Skeleton(buffCount)
  ?item.GetCooldown(＂skeleton_arm＂) < 2 &
  ^foe.count >= 1 & foe.distance < meleeDist
    equip skeleton
    ?buffs.GetCount("pick_pocket") > buffCount - 1
      activate R
    break

func Blade(foeCount)
  ?item.GetCooldown(＂blade＂) < 1 &
  ^foe.count >= foeCount &
  ^foe.distance < longDist &
  ^foe ! pallas
    equip blade
    activate R
    break

func Fissure(foeCount)
  ?(item.GetCooldown(＂fissure＂) < 1 |
  ^item.GetCooldown(＂fissure＂) > 450) &
  ^foe.count >= foeCount & foe.distance >= longDist
    equipL fissure
    activate L
    break

func Quarterstaff()
  ?item.GetCooldown(＂quarterstaff＂) < 1 &
  ^foe.distance > meleeDist
    equip "quarterstaff -socket -stone"
    activate R
    break

func Hatchet(handed)
  ?item.GetCooldown(＂hatchet＂) < 1 &
  ^(foe.distance < meleeDist | harvest = Tree)
    ?handed = R
      equipR hatchet
      activate R
    :
      equipL hatchet
      activate L
    break

// --==[ Buff Functions ]==-- \\
// Smite
// "Pick-pocket"

// --==[ Debuff Functions ]==-- \\
// Stun
// "Armor Fatigue"
// Feeble
// Ignition
// Chill
// Burn
//   immune_to_debuff_damage
// Weaken

// --==[ Utility Functions ]==-- \\
var prevItem
var leftItem
var rightItem

func Backstep(handed)
  ?foe.distance > 10 | item.GetCooldown("mind") > 0
    ?handed = "right" | handed = "R" | handed = ""
      equipR @rightItem@
    :
      equipL @leftItem@
    return
  ?handed = "right" | handed = "R" | handed = ""
    rightItem = item.right
    equipR mind
  :
    leftItem = item.left
    equipL mind
  break

func Dash()
  ?foe.distance < meleeDist
    equipR @rightItem@
    return
  ?foe.distance > meleeDist & foe.distance < 14
    rightItem = item.right
    ?item.GetCooldown("bash") <= 0
      equipR bashing
    :?item.GetCooldown("dash") <= 0
      equipR dashing
    :?item.GetCooldown("quarterstaff") <= 0
      Quarterstaff()
  :
    equipR star
  break

func Push(handed)
  ?foe.distance > 13
    ?handed = "right" | handed = "R" | handed = ""
      equipR @rightItem@
    :
      equipL @leftItem@
    return
  ?foe ! unpushable
    ?handed = "right" | handed = "R" | handed = ""
      rightItem = item.right
      equipR "grappling hook"
    :
      leftItem = item.left
      equipL "grappling hook"
  break

var health = 5
var healUp

func Heal(health)
  ?hp < health & item.potion = "healing"
    activate potion
  ?hp < health * 2 & item.potion = "vampiric"
    activate potion
  ?foe.count > 0 & hp < health * 2 &!
  ^ai.paused
    equipR ah
    healUp = health*2-hp

var flashItem

func FlashR(flashItem)
    ?item.right = flashItem
      equipR @prevItem@
      return
    :
      prevItem = item.right
      equipR @flashItem@
    break

func FlashL(flashItem)
    ?item.left = flashItem
      equipL @prevItem@
      return
    :
      prevItem = item.left
      equipL @flashItem@
    break

var ac

func Armored(ac)
  ?foe.armor >= ac
    Hammer(1)
    Dash()
    ?healUp > 0
      equipL hammer
      equipR ah
    break

var summonType
var summonVsBoss

func TalismanSummon(summonType, summonVsBoss)
  ?summon.GetId() = summonVsBoss &
  ^foe = boss | foe ! boss &
  ^summon.GetId() = summonType
    equipR @rightItem@
    return
  ?summon.GetId() ! summonVsBoss &
  ^foe = boss &! ai.idle
    rightItem = item.right
    ?summonVsBoss = ＂cinderwisp＂
      equipR fire talisman
    ?summonVsBoss = ＂voidweaver＂
      equipR aether talisman
  ?summon.GetId() ! summonType &
  ^foe ! boss
    rightItem = item.right
    ?summonType = ＂cinderwisp＂
      equipR fire talisman
    ?summonType = ＂voidweaver＂
      equipR aether talisman
  ?item.right = talisman
    activate R
  break

func UsePotions()
  ?foe = boss &! ai.paused &
  ^(item.potion = berserk & foe.armor < 1 )
    activate potion

// --==[ Out of Combat ]==-- \\
func OOC()
  ?(foe ! boss & foe.distance > longDist |
  ^ai.paused)
    equipL ouroboros
    ?hp < maxhp-2
      equipR tower
    :
      equipR tri
    break

func Collect()
  ?foe.count > 0
    return
  ?harvest = Boulder & 
  ^harvest.distance < meleeDist
    equip shovel
  ?harvest = Tree & 
  ^harvest.distance < meleeDist
    equipR hatchet
    Hatchet(R)
  ?pickup.distance < meleeDist
    FlashR(star)
  break

// --==[ Potion Functions ]==-- \\
func Potion(type)
  ?!loc.begin
    return
  
  ?type = "strength"
    brew stone
  :?type = "experience"
    brew wood
  :?type = "healing"
    brew tar
  :?type = "lightning"
    brew bronze
  :?type = "vampiric"
    brew tar + bronze
  :?type = "lucky"
    brew stone + bronze
  :?type = "berserk"
    brew wood + bronze
  :?type = "cleansing"
    brew wood + tar
  :?type = "defensive"
    brew stone + tar
  :?type = "invisibility"
    brew wood + stone
  :
    ui.ShowBanner("Invalid potion type!")
    loc.Leave()

// Logic Tree
TalismanSummon(voidweaver, cinderwisp)

?summon.GetId() = ＂cinderwisp＂ &
^summon.GetVar(＂ignition＂) > 10
  activate cinderwisp

?foe = bolesh
  ?hp < 16
  Heal(15)
    equipL ice
    break
  RangeCooldowns(0)
  ?foe.distance < 12
    Backstep(R)
  equipL crossbow
  equipR ah
  break

?foe = nagaraja
  ?hp < maxhp - 5
    Heal(maxhp / 2 - 2)
    equipL crossbow
    break
  RangeCooldowns(0)
  UsePotions()
  ?foe.distance < 12
    Backstep(R)
  equip crossbow socket
  break

?foe = hrímnir
  Heal(10)
  UsePotions()
  WeaponCooldowns(1, 2)
  Armored(1)
  ?foe.distance > meleeDist
    Dash()
  break

?loc = rocky & foe.distance < longDist
  ?foe.armor > 0 & hp > 15
    equip heavy hammer
    Hammer(1)
    break
  ?hp < 15
    equipL dL
    equipR ah
    break
  ?foe = aether
    equip shield ah
    equipL vigor
    break
  ?foe = fire
    equip shield ah
    equip aether
    break
  ?foe = ice
    equip shield ah
    equipL fire
    break
  ?foe = poison
    equip shield ah
    equip ice
    break
  ?foe = vigor
    equip shield ah
    equipL poison
    break
  equip blade
  break

Collect()

Heal(10)

OOC()

UsePotions()

?foe = boss
  WeaponCooldowns(1, 2)

// Quest Objectives - remove later
Blade(5)
?foe.hp < 18
  Skeleton(2)
?foe = boss
  Mask()

Armored(35)

?foe = immune_to_physical
  equipL wand
  equipR ah
  break

?foe = immune_to_ranged
  equip bardiche
  break

// Current stuff - remove later
loadout 5
Dash()

//?foe.distance > meleeDist
//  equip crossbow socket
